generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pedais {
  id                      Int                    @id @default(autoincrement())
  name                    String                 @db.VarChar(255)
  start_date              DateTime               @db.Date
  start_date_registration DateTime               @default(now()) @db.Date
  end_date_registration   DateTime               @db.Date
  additional_information  String?                @db.VarChar(255)
  start_place             String                 @db.VarChar(255)
  participants_limit      Int?
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  authorId                Int
  start_place_photo       String?                @db.VarChar(255)
  author                  User                   @relation(fields: [authorId], references: [id])
  Subscription            SubscriptionOnPedais[]
}

model User {
  id           Int                    @id @default(autoincrement())
  name         String                 @db.VarChar(255)
  email        String                 @unique @db.VarChar(255)
  password     String                 @db.VarChar(255)
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt
  pedais       Pedais[]
  Subscription SubscriptionOnPedais[]
}

model SubscriptionOnPedais {
  ride_id           Int
  user_id           Int
  subscription_date DateTime @default(now())
  pedal             Pedais   @relation(fields: [ride_id], references: [id])
  id_user           User     @relation(fields: [user_id], references: [id])

  @@id([ride_id, user_id])
}
